@model SMDH.Models.Plan
@{
    ViewBag.Title = "Create New Collection Plan";
    ViewBag.Heading = "Create New Collection Plan";
}
@if (false)
{ 
    <script src="/js/jquery-1.8.2-vsdoc.js" type="text/javascript"></script>
}
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script src="http://openlayers.org/dev/OpenLayers.js"></script>
<script src="http://code.jquery.com/jquery-migrate-1.1.0.min.js"></script>
<script src="/js/collection-plan-request-ticket.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="/css/DT_bootstrap.css" />
<script src="/js/chosen.jquery.js" type="text/javascript"></script>
<script src="/js/date.format.js" type="text/javascript"></script>
<script type="text/javascript">
    var map, vectors, epsg900913 = new OpenLayers.Projection('EPSG:900913'), epsg4326 = new OpenLayers.Projection('EPSG:4326');
    //var xml = "<plans><plan id = '1'><wpt lat='10.80079' lon='106.6613'/><wpt lat='10.80023' lon='106.6673' /><wpt lat='10.80139' lon='106.6683' /><wpt lat='10.80167' lon='106.6657' /><wpt lat='10.8027' lon='106.6668' /><wpt lat='10.80382' lon='106.6658' /><wpt lat='10.80439' lon='106.6661' /><wpt lat='10.80481' lon='106.6663' /><wpt lat='10.80486' lon='106.6646' /><wpt lat='10.80348' lon='106.6626' /><wpt lat='10.80079' lon='106.6613' /></plan><plan id='2'><wpt lat='10.80079' lon='106.6613'/><wpt lat='10.80137' lon='106.6531' /><wpt lat='10.80118' lon='106.6554' /><wpt lat='10.80147' lon='106.6545' /><wpt lat='10.80432' lon='106.6548' /><wpt lat='10.80618' lon='106.6552' /><wpt lat='10.80531' lon='106.6587' /><wpt lat='10.80458' lon='106.661' /><wpt lat='10.80556' lon='106.6614' /><wpt lat='10.80079' lon='106.6613'/></plan><plans>";
    //var xmls= '<plans><plan id = "1"><wpt lat="10.80079" lon="106.6613" /><wpt lat="10.80023" lon="106.6673" /><wpt lat="10.80139" lon="106.6683" /><wpt lat="10.80167" lon="106.6657" /><wpt lat="10.8027" lon="106.6668" /><wpt lat="10.80382" lon="106.6658" /><wpt lat="10.80439" lon="106.6661" /><wpt lat="10.80481" lon="106.6663" /><wpt lat="10.80486" lon="106.6646" /><wpt lat="10.80348" lon="106.6626" /><wpt lat="10.80079" lon="106.6613" /> </plan><plan id="2"><wpt lat="10.80097" lon="106.66" /><wpt lat="10.80137" lon="106.6531" /><wpt lat="10.80118" lon="106.6554" /><wpt lat="10.80147" lon="106.6545" /><wpt lat="10.80432" lon="106.6548" /><wpt lat="10.80618" lon="106.6552" /><wpt lat="10.80531" lon="106.6587" /><wpt lat="10.80458" lon="106.661" /><wpt lat="10.80556" lon="106.6614" /><wpt lat="10.80097" lon="106.66" /></plan><plans>';
    var xmls = "<gpx><wpts><wpt lat='10.80097' lon='106.66' /><wpt lat='10.80137' lon='106.6531' /><wpt lat='10.80118' lon='106.6554' /><wpt lat='10.80147' lon='106.6545' /><wpt lat='10.80432' lon='106.6548' /><wpt lat='10.80618' lon='106.6552' /><wpt lat='10.80531' lon='106.6587' /><wpt lat='10.80458' lon='106.661' /><wpt lat='10.80556' lon='106.6614' /><wpt lat='10.80097' lon='106.66' /></wpts><trk><trkseg><trkpt lat='10.80097' lon='106.66' /><trkpt lat='10.80092' lon='106.66' /><trkpt lat='10.80098' lon='106.6591' /><trkpt lat='10.80099' lon='106.659' /><trkpt lat='10.80105' lon='106.6582' /><trkpt lat='10.80109' lon='106.6579' /><trkpt lat='10.80109' lon='106.6578' /><trkpt lat='10.80111' lon='106.6575' /><trkpt lat='10.80116' lon='106.6571' /><trkpt lat='10.80121' lon='106.6564' /><trkpt lat='10.80123' lon='106.6561' /><trkpt lat='10.80127' lon='106.6557' /><trkpt lat='10.80137' lon='106.6545' /><trkpt lat='10.80138' lon='106.6545' /><trkpt lat='10.80142' lon='106.6539' /><trkpt lat='10.80155' lon='106.6526' /><trkpt lat='10.80155' lon='106.6526' /><trkpt lat='10.80163' lon='106.6517' /><trkpt lat='10.80168' lon='106.6511' /><trkpt lat='10.8017' lon='106.6509' /><trkpt lat='10.80178' lon='106.6499' /><trkpt lat='10.8018' lon='106.6497' /><trkpt lat='10.80181' lon='106.6496' /><trkpt lat='10.80187' lon='106.6489' /><trkpt lat='10.80189' lon='106.6487' /><trkpt lat='10.80193' lon='106.6482' /><trkpt lat='10.80198' lon='106.6475' /><trkpt lat='10.80198' lon='106.6475' /><trkpt lat='10.80184' lon='106.6475' /><trkpt lat='10.80179' lon='106.6482' /><trkpt lat='10.80175' lon='106.6487' /><trkpt lat='10.80167' lon='106.6496' /><trkpt lat='10.80167' lon='106.6496' /><trkpt lat='10.80165' lon='106.6498' /><trkpt lat='10.80152' lon='106.6511' /><trkpt lat='10.80141' lon='106.6526' /><trkpt lat='10.80137' lon='106.6531' /><trkpt lat='10.8013' lon='106.6539' /><trkpt lat='10.80125' lon='106.6545' /><trkpt lat='10.80118' lon='106.6554' /><trkpt lat='10.80125' lon='106.6545' /><trkpt lat='10.80137' lon='106.6545' /><trkpt lat='10.80147' lon='106.6545' /><trkpt lat='10.80269' lon='106.6546' /><trkpt lat='10.80432' lon='106.6548' /><trkpt lat='10.80522' lon='106.6549' /><trkpt lat='10.80625' lon='106.655' /><trkpt lat='10.80618' lon='106.6552' /><trkpt lat='10.80573' lon='106.6566' /><trkpt lat='10.80569' lon='106.6567' /><trkpt lat='10.80552' lon='106.6574' /><trkpt lat='10.80545' lon='106.6579' /><trkpt lat='10.80541' lon='106.6582' /><trkpt lat='10.80534' lon='106.6585' /><trkpt lat='10.80531' lon='106.6587' /><trkpt lat='10.80526' lon='106.6589' /><trkpt lat='10.80516' lon='106.6593' /><trkpt lat='10.80509' lon='106.6595' /><trkpt lat='10.80501' lon='106.6597' /><trkpt lat='10.80491' lon='106.66' /><trkpt lat='10.80486' lon='106.6602' /><trkpt lat='10.80471' lon='106.6606' /><trkpt lat='10.80461' lon='106.6608' /><trkpt lat='10.80458' lon='106.661' /><trkpt lat='10.80456' lon='106.6611' /><trkpt lat='10.80485' lon='106.6612' /><trkpt lat='10.805' lon='106.6613' /><trkpt lat='10.80529' lon='106.6613' /><trkpt lat='10.80556' lon='106.6614' /><trkpt lat='10.80529' lon='106.6613' /><trkpt lat='10.805' lon='106.6613' /><trkpt lat='10.80485' lon='106.6612' /><trkpt lat='10.80456' lon='106.6611' /><trkpt lat='10.80441' lon='106.661' /><trkpt lat='10.80394' lon='106.6609' /><trkpt lat='10.80351' lon='106.6608' /><trkpt lat='10.80338' lon='106.6608' /><trkpt lat='10.80311' lon='106.6607' /><trkpt lat='10.80299' lon='106.6607' /><trkpt lat='10.80281' lon='106.6606' /><trkpt lat='10.80276' lon='106.6606' /><trkpt lat='10.80264' lon='106.6606' /><trkpt lat='10.8025' lon='106.6606' /><trkpt lat='10.8024' lon='106.6605' /><trkpt lat='10.80196' lon='106.6606' /><trkpt lat='10.80193' lon='106.6603' /><trkpt lat='10.80192' lon='106.6601' /><trkpt lat='10.80191' lon='106.6601' /><trkpt lat='10.80171' lon='106.6601' /><trkpt lat='10.80149' lon='106.6601' /><trkpt lat='10.80127' lon='106.6601' /><trkpt lat='10.80097' lon='106.66' /></trkseg></trk></gpx>";
    var wpt = new Array();
    var geopt = new Array();
    var i = 0;
    //    $(xmls).find("wpts").each(function () {
    //        var waypoints = new Array();
    //        waypoints.length = 0;
    //        var lats = new Array();
    //        var lons = new Array();
    //        j = 0;
    //        $(this).find("wpt").each(function () {
    //            lats[j] = ($(this).attr("lat"));
    //            lons[j] = ($(this).attr("lon"));
    //            waypoints.push({
    //                location: new OpenLayers.LonLat(lons[j], lats[j]).transform(epsg4326, epsg900913)
    //            });
    //            j++;
    //        });
    //        wpt[i] = waypoints;
    //        i++;
    //    });
    //    var k = 0;
    //    $(xmls).find("trkseg").each(function () {
    //        var routes = new Array();
    //        routes.length = 0;
    //        var lats = new Array();
    //        var lons = new Array();
    //        j = 0;
    //        $(this).find("trkpt").each(function () {
    //            lats[j] = ($(this).attr("lat"));
    //            lons[j] = ($(this).attr("lon"));
    //            routes.push({
    //                location: new OpenLayers.Geometry.Point(lons[j], lats[j])
    //            });
    //            j++;
    //        });
    //        geopt[k] = routes;
    //        k++;
    //    });

    function initialize() {

        // Create the map object
        map = new OpenLayers.Map('map');
        //Create a Google layer

        // if i use this instead of gmap then everything works.
        var gmap = new OpenLayers.Layer.Google("Google Streets", // the default
				{
				numZoomLevels: 20
});
        map.addLayer(gmap);
        map.setCenter(new OpenLayers.LonLat(106.6613, 10.80079).transform(epsg4326, epsg900913), 16);

    }


    $(document).ready(function () {
        // Create the map object
        initialize();
        $('#modals').modal('show');
    });

    function parseXml(xml) {
        var dom = null;
        if (window.DOMParser) {
            try {
                dom = (new DOMParser()).parseFromString(xml, "text/xml");
            }
            catch (e) {
                dom = null;
            }
        } else if (window.ActiveXObject) {
            try {
                dom = new ActiveXObject('Microsoft.XMLDOM');
                dom.async = false;
                if (!dom.loadXML(xml)) // parse error ..
                    window.alert(dom.parseError.reason + dom.parseError.srcText);
            }
            catch (e) {
                dom = null;
            }
        } else alert("cannot parse xml string!");
        return dom;
    }

    function getListOfPlannedRequest() {
        var xmlHttp = new XMLHttpRequest();
        var requestsNum = $("#requestsNum").val();
        var plansNum = $("#plansNum").val();
        //alert(plansNum + " " + requestsNum);
        xmlHttp.onreadystatechange = function () {
            if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
            }
        }
        //xmlHttp.open("GET", "CollectionPlans/AutoSchedulePlan");
    }

</script>
<link rel="stylesheet" type="text/css" href="/css/DT_bootstrap.css" />
<link href="/css/dataTables.bootstrap.css" rel="stylesheet" type="text/css" />
<script src="/js/jquery.dataTables.js" type="text/javascript"></script>
<script type="text/javascript" charset="utf-8" language="javascript" src="/js/DT_bootstrap.js"></script>
<script src="/js/dataTables.bootstrap.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="/js/crud.js" type="text/javascript"></script>
<link href="/css/datepicker.css" rel="stylesheet" type="text/css" />
<script src="/js/bootstrap-datepicker.js" type="text/javascript"></script>
@*
    <div style="float: left; margin-top: -10px;">
        <button class="btn btn btn-link" type="button">
            Settings</button>
    </div>*@
<div class="span12">
    <a class="btn btn-primary btn-mini" id="btnSetting">Setting</a></div>
<div class="span4">
    <div class="widget-box">
        <div class="widget-title">
            <span class="icon"><i class="icon-th-list"></i></span>
            <h5>
                Unplanned Requests
            </h5>
        </div>
        <div class="widget-content">
            <div id="unplanned-requests">
                <ul class="site-stats">
                    <li>
                        <div class="request-ticket-info">
                            <i class="icon-book"></i><small class="requestId"></small><i class="icon-user"></i>
                            <small class="customer"></small><i class="icon-calendar"></i><small class="requestedDate">
                            </small>
                            <div>
                                <i class="icon-globe"></i><small class="collectionAddress"></small>
                            </div>
                        </div>
                        <div class="right-column">
                            <span><a href="javascript:void(0)" class="addToPlan label label-success">Add</a></span>
                            <input type="checkbox" name="plan" />
                            <span><a href="javascript:void(0)" class="myToolTip hide confirmSetLocation btn action"
                                rel="tooltip" title="Confirm Set Location">\
                                <img src="/img/icons2/checkmark2.png" width="18">\ </a></span><span><a href="javascript:void(0)"
                                    class="removeToPlan hide removeFromPlan btn action" rel="tooltip" title="Cancel Set Location">
                                    <span class="icomoon-icon-cancel"></span>\ </a></span>
                        </div>
                    </li>
                </ul>
            </div>
            <div>
                <a class="btn btn-primary btn-mini" id="btnadd">Add to plan</a>
            </div>
        </div>
    </div>
    <div class="widget-box">
        <div class="widget-title">
            <span class="icon"><i class="icon-th-list"></i></span>
            <h5>
                Selected Requests
            </h5>
        </div>
        <div class="widget-content">
            <div id="selected-requests">
                <ul class="site-stats">
                </ul>
            </div>
            <div>
                <a class="btn btn-primary btn-mini" id="btnremove">Remove from plan</a>
            </div>
        </div>
    </div>
</div>
<div class="span7">
    <div class="widget-box">
        <div class="widget-title">
            <span class="icon"><i class="icon-th-list"></i></span>
            <h5>
                Map
            </h5>
        </div>
        <div class="widget-content">
            <div id="map">
            </div>
            <a class="btn btn-primary" id="btnCreatePlan" onclick="createPlan()">Create Plan</a>
        </div>
    </div>
</div>
<div id="modals" class="modal fade">
    <div class="modal-header">
        <h3>
            AutoSchedule Settings</h3>
    </div>
    </br>
    <div class="modal-body">
        <div class="controls pull-left">
            City/Province : @Html.DropDownList("CityProvince", ViewBag.PossibleCityProvinces as SelectList, "-- Choose a City/Province --", new { id = "ddlCityProvince", Class = "chzn-select" })
        </div>
        <br />
        <div class="controls pull-left">
            Maximum Requests:<select class="requestsNum" id="ddlRequestNumber"><option>Please select
                city first</option>
            </select>
        </div>
        <br />
        <div class="controls pull-left">
            Plans:<select class="plansNum" id="ddlPlansNumber"><option>Please select City first</option>
            </select>
        </div>
    </div>
    <div class="modal-footer" style="padding-right: 55px; margin-top: -15px;">
        <button class="btn  btn-primary" type="button">
            Save Settings</button>
        <button class="btn  btn-primary" type="button">
            Load Settings</button>
        <button class="btn btn-success" type="button" id="btnOK" data-dismiss="modal" aria-hidden="true">
            Ok</button>
    </div>
</div>
<script>
    var selectedRequestIds = new Array();
    var numRequests;
    var numPlans;
    var dateScore = 0.5;
    var deliveryTypeScore = 0.5;

    $("#ddlCityProvince").change(function () {
        var items = '';
        var deliveryMenItems = '';
        var id = $("#ddlCityProvince option:selected").val();
        if (id == '') id = -1;
        $.get('/CityProvince/GetMaximumRequestsOfCity/' + id, function (data) {
            numRequests = data >= 0 ? data : 0;
            for (var i = 0; i < data; i++) {
                items += "<option value='" + (i + 1) + "'>" + (i + 1) + "</option>";
            }
            $('#ddlRequestNumber').html(items);
        });

        $.get("/DeliveryMen/GetAvailableDeliveryMen", function (data) {
            numPlans = data >= 0 ? data : 0;
            for (var i = 0; i < data; i++) {
                deliveryMenItems += "<option value='" + (i + 1) + "'>" + (i + 1) + "</option>";
            }
            $("#ddlPlansNumber").html(deliveryMenItems);

        });
    });

    $("#btnOK").click(function () {
        $.blockUI();
        numRequests = $("#ddlRequestNumber option:selected").val();
        numPlans = $("#ddlPlansNumber option:selected").val();
        if (numPlans > numRequests) {
            bootbox.alert('Please enter number of request > 0');
        } else {
            $.post('/Plans/GetSelectedRequests/', { numberOfRequests: numRequests, numberOfPlans: numPlans, weightedDateScore: dateScore, weightedDeliveryTypeScore:
                deliveryTypeScore
            }, function (result) {
                //alert(result);

                if (result.success) {
                    updateRequestsView(result.requests, result.notSelected);
                    createLatsLons(result.waypoints, result.segments);
                    addMarker();
                    addDirection();
                    map.setCenter(wpt[0][0].location, 16);
                    $.unblockUI();
                }
            });
        }
    });

    $("#btnSetting").click(function () {
        $('#modals').modal('show');
    });

    function createPlan() {
        if (selectedRequestIds.length == 0) {
            bootbox.alert('Please select at least 1 request to create plan.');
        } else {
//            for (i = 0; i < selectedRequestIds.length; i++) {
//                alert(selectedRequestIds[i]);
//            }
            $.post('/Plans/ConfirmCreateCollectionPlan', { selectedRequestIds: selectedRequestIds.toString() }, function (result) {
                if (result.success) {
                    $.blockUI();
                    window.location = '/Plans/Details?&id=' + result.planId;
                }
            });
        }
    }

    function removeA(arr) {
        var what, a = arguments, L = a.length, ax;
        while (L > 1 && arr.length) {
            what = a[--L];
            while ((ax = arr.indexOf(what)) != -1) {
                arr.splice(ax, 1);
            }

        }
        return arr;
    }

    function createLatsLons(waypointsLists, segmentsLists) {
        var i = 0;
        $.each(waypointsLists, function (index, waypoints) {
            var j = 0;
            var waypointsArr = new Array();
            waypointsArr.length = 0;
            var lats = new Array();
            var lons = new Array();
            $.each(waypoints, function (index, waypoint) {
                lats[j] = waypoint.Latitude;
                lons[j] = waypoint.Longitude;
                waypointsArr.push({
                    location: new OpenLayers.LonLat(lons[j], lats[j]).transform(epsg4326, epsg900913)
                });
                j++;
            });
            wpt[i] = waypointsArr;
            i++;
        });



        i = 0;

        $.each(segmentsLists, function (index, segments) {
            var j = 0;
            var segmentsArr = new Array();
            segmentsArr.length = 0;
            var lats = new Array();
            var lons = new Array();
            $.each(segments, function (index, segment) {
                lats[j] = segment.Latitude;
                lons[j] = segment.Longitude;
                segmentsArr.push({
                    location: new OpenLayers.Geometry.Point(lons[j], lats[j])
                });

                j++;
            });

            geopt[i] = segmentsArr;
            i++;
        });
        //alert("Segments:" + geopt[0].length + " " + geopt[0][0].location);
    }

    var updateRequestsView = function (requests, notSelectedRequests) {
        var requestTickets = createRequestTickets(requests);
        var notSelectedRequestsTicket = createRequestTickets(notSelectedRequests);
        $("#selected-requests > ul").html(requestTickets);
        $("#unplanned-requests > ul").html(notSelectedRequestsTicket);
        $('.myToolTip').tooltip();
    };

    var addToPlan = function (requestId) {
        //alert("Added to plan");
        $("#request-" + requestId + " a.addToPlan").tooltip('hide');
        $("#selected-requests > ul").append($("#request-" + requestId));
        selectedRequestIds[selectedRequestIds.length] = requestId;
        $("#request-" + requestId + " .right-column").html('<a href="javascript:void(0)" class="removeToPlan label label-important" rel="tooltip" onclick="removeFromPlan(' + requestId + ')" title="Add to plan">Remove</a>');
        $('.myToolTip').tooltip();
    };

    var removeFromPlan = function (requestId) {
        //            for (var i = 0; i < selectedRequestIds.length; i++) {
        //                if (selectedRequestIds[i] == requestId) selectedRequestIds.splice(i, 1);
        //            }
        //            $("#request-" + requestId).remove();
        //            if ($('#ddlWard option:selected').val() != '-1') {
        //                $('#ddlWard').trigger("change");!= '-1') {
        //                $('#ddlDistrict').trigger("change");
        //            } else if ($('#ddlDistrict option:selected').val() 
        //            } else {remove
        //                $('#ddlCityProvince').trigger("change");
        //            }
        //alert("remove " + requestId);
        $("#request-" + requestId + " a.removeToPlan").hide();
        $("#unplanned-requests > ul").append($("#request-" + requestId));
        removeA(selectedRequestIds, requestId);
        $("#request-" + requestId + " .right-column").html('<a href="javascript:void(0)" class="addToPlan label label-success" rel="tooltip" onclick="addToPlan(' + requestId + ')" title="Add to plan">Add</a>');
        $('.myToolTip').tooltip();
    };

    function addMarker() {
        var gmap = new OpenLayers.Layer.Google("Google Streets", // the default
				{
				numZoomLevels: 20
});
        markers = new OpenLayers.Layer.Markers("Markers");
        markers.id = "Markers";
        map.addLayer(markers);
        for (var i = 0; i < wpt.length; i++) {
            var color = randomColor();

            for (var j = 0; j < wpt[i].length; j++) {
                var position = new Array();
                var icon = new Array();
                position[j] = wpt[i][j].location;
                var size = new OpenLayers.Size(21, 25);
                var image = "https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=" + j + "|" + color + "|000000";
                if (j == 0) {
                    image = "http://www.lupusstudios.com/images/iconHome.png";
                }
                var offset = new OpenLayers.Pixel(-(size.w / 2), -size.h);
                icon[j] = new OpenLayers.Icon(image, size, offset);
                var markerslayer = map.getLayer('Markers');
                markerslayer.addMarker(new OpenLayers.Marker(position[j], icon[j]));

            }
        }
    }

    function addDirection() {
        var gmap = new OpenLayers.Layer.Google("Google Streets", // the default
				{
				numZoomLevels: 20
});
        var lineLayer = new OpenLayers.Layer.Vector("Lines Layer");
        for (var i = 0; i < geopt.length; i++) {
            var color = randomColor();
            var style = {
                strokeColor: '#' + color,
                strokeOpacity: 0.5,
                strokeWidth: 5
            };
            var lineString = new Array();
            var line = new Array();
            var endLats = 0;
            var endLongs = 0;
            for (var j = 0; j < geopt[i].length - 1; j++) {

                var start = j == 0 ? geopt[i][j].location : new OpenLayers.Geometry.Point(endLats, endLongs);
                var end = geopt[i][j + 1].location;

                endLats = geopt[i][j + 1].location.x;
                endLongs = geopt[i][j + 1].location.y;

                //alert(endLats);

                var line = new OpenLayers.Geometry.LineString([start, end]).transform(epsg4326, epsg900913);
                lineString.push(line);
                //alert(start);

            }
            for (var k = 0; k < lineString.length; k++) {
                lineLayer.addFeatures([new OpenLayers.Feature.Vector(lineString[k], null, style)]);
                //alert(start + '  ' + end);
                map.addLayers([gmap, lineLayer]);
            };

        }
    }

    //function random color
    function randomColor() {
        var hexno = new String;
        arr = new Array("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f");
        var n1 = Math.round(Math.random() * 15);
        var n2 = Math.round(Math.random() * 15);
        var n3 = Math.round(Math.random() * 15);
        var n4 = Math.round(Math.random() * 15);
        var n5 = Math.round(Math.random() * 15);
        var n6 = Math.round(Math.random() * 15);
        hexno = arr[n1] + "" + arr[n2] + "" + arr[n3] + "" + arr[n4] + "" + arr[n5] + "" + arr[n6];
        return hexno;
    }

</script>
