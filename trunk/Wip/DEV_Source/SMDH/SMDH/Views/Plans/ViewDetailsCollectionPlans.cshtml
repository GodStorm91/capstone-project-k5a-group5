@model IEnumerable<SMDH.Models.Plan>
@using SMDH.Models.Utilities
@using SMDH.Models.Statuses
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "Create new Plan";
    ViewBag.Heading = "Plan";
}
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript" src="/js/OpenLayers.js"></script>
<script type="text/javascript" src="/js/jquery-migrate-1.1.0.min.js"></script>
<link rel="stylesheet" type="text/css" href="/css/DT_bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/css/select2.css" />
<link href="/css/dataTables.bootstrap.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" charset="utf-8" language="javascript" src="/js/jquery.dataTables.js"></script>
<script type="text/javascript" charset="utf-8" language="javascript" src="/js/DT_bootstrap.js"></script>
<script src="/js/dataTables.bootstrap.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="/js/crud.js" type="text/javascript"></script>
<script src="/js/form-action.js" type="text/javascript"></script>
<script src="/js/chosen.jquery.js" type="text/javascript"></script>
<link href="/css/datepicker.css" rel="stylesheet" type="text/css" />
<script src="/js/bootstrap-datepicker.js" type="text/javascript"></script>
<script src="/js/date.js" type="text/javascript"></script>
<script src="/js/accounting.js" type="text/javascript"></script>
@*<script src="/js/jquery-1.7.2.min.js" type="text/javascript"></script>*@
<script src="/js/jquery.numeric.js" type="text/javascript"></script>
<style type="text/css">
    #map
    {
        max-width: none;
    }
</style>
@*<div class="row-fluid">
    <div class="span10">
        <div class="checkButtonStatus">
            <div class="row-fluid">
                <button type="button" class="btn btn-inverse pull-left" id="checkAll">
                    All</button>
                <div class="btn-group pull-left" data-toggle="buttons-checkbox">
                    <button type="button" class="sttNew btn status" data-status="new">
                        New</button>
                    <button type="button" class="sttAssigned btn status" data-status="assigned">
                        Assigned</button>
                    <button type="button" class="sttFinished btn status" data-status="finished">
                        Finished</button>
                </div>
                <button type="button" class="btn btn-inverse pull-left" id="checkNone">
                    None</button>
            </div>
        </div>
        <div id="dateFilterSelector">
            <div class="row-fluid bordered">
                <div class="pull-left" style="line-height: 40px; margin-right: 10px; font-weight: bold;">
                    Created Date:
                </div>
                <div class="pull-left" data-date-format="dd/mm/yyyy">
                    From
                    <input class="datepicker input-small" size="16" type="text" value="" id="startDateFilter"
                        name="startDate"><br />
                </div>
                <div class="pull-left" data-date-format="dd/mm/yyyy" style="margin-left: 30px;">
                    To
                    <input class="datepicker input-small" size="16" type="text" value="" id="endDateFilter"
                        name="endDate">
                </div>
                <div class="span3" style="line-height: 28px; position: relative;">
                    <div style="position: absolute; bottom: 0; left: 0;">
                        <input id="toggleElement" type="checkbox" name="toggle" onchange="toggleStatus()" />
                        Disable Date Filter
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="span2">
        <a class="btn btn-primary" onclick="$(this).closest('form').submit()" id="btnFilter">
            Filter</a>
    </div>
</div>*@
<div id="divTable">
    @Html.Partial("PlansTable", Model)
</div>
<div class="modal" id="editModal" style="left: 40%; width: 700px; top: 40%;">
</div>
@*<div class="modal hide fade" id="assignModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
            ×</button>
        <h3 id="myModalLabel">
            Assign plan to delivery staff</h3>
    </div>
    <div class="modal-body">
        <form action="#" method="get" class="form-horizontal">
        <div class="control-group">
            <label class="control-label">
                Assign to</label>
            <div class="controls">
                @if (ViewBag.PossibleDeliveryStaffs != null)
                {
                    foreach (var d in ViewBag.PossibleDeliveryStaffs)
                    {
                    <label>
                        <input type="checkbox" name="deliveryman" value="@d.DeliveryMenId"/>
                        @d.FirstName @d.LastName</label>     
                    }
                }
            </div>
        </div>
        </form>
    </div>
    <div class="modal-footer">
        <button class="btn btn-primary" id="btnAssign">
            Save</button>
        <button class="btn" data-dismiss="modal" aria-hidden="true">
            Close</button>
    </div>
</div>*@
<script type="text/javascript">
    var map, vectors, epsg900913 = new OpenLayers.Projection('EPSG:900913'), epsg4326 = new OpenLayers.Projection('EPSG:4326');
    edit = function (modelId) {
        $.ajax({
            url: '/Plans/Details/' + modelId,
            type: 'POST',
            dataType: 'html',
            success: function (data) {
                $('#editModal').html(data);
                // Create the map object

                $("form").removeData("validator");
                $("form").removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse("form");
                $('.editor-field').keypress(function (e) {
                    if (e.which == 13) {
                        $(this).parents('form').submit();
                        e.preventDefault();
                        return false;
                    }
                });
                $('#editModal').modal();
                map = new OpenLayers.Map('map');
                //Create a Google layer

                // if i use this instead of gmap then everything works.
                var gmap = new OpenLayers.Layer.Google("Google Streets", // the default
				{
				numZoomLevels: 20
});
                map.addLayer(gmap);
                map.setCenter(new OpenLayers.LonLat(106.6613, 10.80079).transform(epsg4326, epsg900913), 16);
            }
        });
    };

    var PlanId = 0;
    function assign() {
        PlanId = arguments[0];
    }

    $('#btnAssign').click(function () {
        var checkBoxs = $("input[name=deliveryman]");
        var listdeliveryman = new Array();
        var listNotChooseDeliveryMan = new Array();
        var i = 0;
        var j = 0;
        $.each(checkBoxs, function () {
            if ($(this).is(":checked")) {
                listdeliveryman[i] = $(this).val();
                i++;
            } else {
                listNotChooseDeliveryMan[j] = $(this).val();
                j++
            }
        });
        $.ajaxSettings.traditional = true;
        $.post('/Plans/Assign/', { PlanId: PlanId, listdeliveryman: listdeliveryman, listNotAssignedDeliveryMen: listNotChooseDeliveryMan }, function (result) {
            if (result.success) {
                $.blockUI();
                window.location.reload();
            } else {
                bootbox.alert('Unable to assign. Please refresh and try again.');
            }
        });
    });

    //    $('#checkAll').click(function () {
    //        $('.checkButtonStatus .btn-group .btn.status').addClass("active");
    //        selectedStatusIds = allStatus;
    //    });

    //    $('#checkNone').click(function () {
    //        $('.checkButtonStatus .btn-group .btn.status').removeClass("active");
    //        selectedStatusIds = new Array();
    //    });

    //    $('#statusFilter').submit(function () {
    //        $.ajaxSettings.traditional = true;
    //        $.ajax({
    //            type: 'POST',
    //            url: '/DeliveryPlans/GetStatusByCheckBox/',
    //            data: {
    //                selectedStatusIds: selectedStatusIds,
    //                startDate: $('#startDateFilter').val(),
    //                endDate: $('#endDateFilter').val()
    //            },
    //            success: function (result) {
    //                $('#divTable').html(result);
    //                $('#main-table').dataTable({
    //                    "bRetrieve": true,
    //                    "sDom": "<'row'<'span6 tblBtnGroup'><'span6'f>r>t<'row'<'span6'l><'span6'p>>"
    //                });
    //                $("div.tblBtnGroup").html('<a href="/DeliveryPlans/Create" role="button" class="btn DTTT_button_text btn-success" id="btnNewPlan"><span>Add</span></a>');
    //            },
    //            async: false
    //        });
    //        return false;
    //    });

    //    $('#statusFilter').submit(function () {
    //        urlParams = '';
    //        $.each($('.checkButtonStatus .btn-group .btn.status'), function (index, btn) {
    //            if ($(btn).hasClass('active')) {
    //                urlParams += '&status=' + $(btn).data('status');
    //            }
    //        });
    //        if ($('#startDateFilter').val() != '') {
    //            //getDateFromFormat($('#startDateFilter').val(),'dd/MM/y');
    //            var dateParts = $('#startDateFilter').val().split("/");
    //            urlParams += '&startDate=' + dateParts[0] + dateParts[1] + dateParts[2];
    //        }
    //        if ($('#endDateFilter').val() != '') {
    //            //getDateFromFormat($('#startDateFilter').val(),'dd/MM/y');
    //            var dateParts = $('#endDateFilter').val().split("/");
    //            urlParams += '&endDate=' + dateParts[0] + dateParts[1] + dateParts[2];
    //        }
    //        $.blockUI();
    //        window.location = '/Plans/ViewDetailsCollectionPlans?' + urlParams;
    //        return false;
    //    });

    //    function in_array(array, id) {
    //        for (var i = 0; i < array.length; i++) {
    //            if (array[i] == id) {
    //                return true;
    //            }
    //        }
    //        return false;
    //    }

    //    function toggleStatus() {
    //        if ($('#toggleElement').is(':checked')) {
    //            $('#dateFilterSelector input.datepicker').attr('disabled', true);
    //            $('#dateFilterSelector input.datepicker').val("");
    //        }
    //        else {
    //            $('#dateFilterSelector :input').removeAttr('disabled');
    //        }
    //    }

    //    $('.datepicker').datepicker({ format: 'dd/mm/yyyy' });

    //    var showUpdateStatusModal = function (deliveryPlanId, currentStatus) {
    //        $('#ddlStatus option[value="' + currentStatus + '"]').attr('selected', 'selected');
    //        $('#updateStatusModal').modal();

    //        $('#btnUpdateStatus').click(function () {
    //            updateDeliveryPlanStatus(deliveryPlanId);
    //        });
    //    };

    //    var updateDeliveryPlanStatus = function (deliveryPlanId) {
    //        var status = $('#ddlStatus option:selected').val();
    //        $.post('/DeliveryPlans/UpdateStatus/', { deliveryPlanId: deliveryPlanId, newStatus: status }, function (result) {
    //            if (result.success) {
    //                window.location = '/DeliveryPlans';

    //            }
    //        });
    //    }; 
</script>
