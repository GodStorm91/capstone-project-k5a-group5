@model IEnumerable<SMDH.Models.Order>
@using System.Text.RegularExpressions;
@using SMDH.Models.Statuses
@{
    ViewBag.Title = "Index";
    ViewBag.Heading = "Orders";
}
@if (false)
{ 
    <script src="/js/jquery-1.8.2-vsdoc.js" type="text/javascript"></script>
}
<link rel="stylesheet" type="text/css" href="/css/DT_bootstrap.css" />
<link href="/css/dataTables.bootstrap.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" charset="utf-8" language="javascript" src="/js/jquery.dataTables.js"></script>
<script type="text/javascript" charset="utf-8" language="javascript" src="/js/DT_bootstrap.js"></script>
<script src="/js/dataTables.bootstrap.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link href="/css/chosen.css" rel="stylesheet" type="text/css" />
<link href="/css/datepicker.css" rel="stylesheet" type="text/css" />
<script src="/js/chosen.jquery.js" type="text/javascript"></script>
<script src="/js/bootstrap-datepicker.js" type="text/javascript"></script>
@using (Html.BeginForm("RequestListByStatus", "Orders", FormMethod.Post, new { id = "statusFilter" }))
{ 
    <fieldset>
        <div class="row-fluid">
            <div class="span10">
                <div class="checkButtonStatus">
                    <div class="row-fluid">
                        <div class="btn-group pull-left" data-toggle="buttons-checkbox" style="white-space:normal">                            
                            <button type="button" class="btn btn-inverse pull-left" id="checkAll">
                                All</button>                            
                            <button type="button" class="sttDelivering btn status" data-status="delivering">
                                Delivering</button>
                            <button type="button" class="sttDelivered btn status" data-status="delivered">
                                Delivered</button>
                            <button type="button" class="sttWaitingForReturn btn status" data-status="waitingForReturn">
                                WaitingForReturn</button>
                            @*<button type="button" class="btn status active" data-status-id="5">
                                Collecting</button>*@                            
                        </div>
                    </div>
                </div>
                <div id="dateFilterSelector">
                    <div class="row-fluid bordered">
                        <div class="pull-left" style="line-height: 40px;margin-right: 10px;font-weight: bold;">
                            Requested Date: 
                        </div>
                        <div class="pull-left" data-date-format="dd/mm/yyyy">
                            From
                            <input class="datepicker input-small" size="16" type="text" value="" id="startDateFilter"
                                name="startDate"><br />
                        </div>
                        <div class="pull-left" data-date-format="dd/mm/yyyy" style="margin-left: 30px;">
                            To
                            <input class="datepicker input-small" size="16" type="text" value="" id="endDateFilter"
                                name="endDate">
                        </div>
                        <div class="span3" style="height: 28px; position: relative;margin-left: 30px;line-height: 28px;">
                            <div style="position: absolute; bottom: 0; left: 0;">
                                <input id="toggleElement" type="checkbox" name="toggle" onchange="toggleStatus()" />
                                Disable Date Filter
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="span2">
                <a class="btn btn-primary" onclick="$(this).closest('form').submit()" id="btnFilter"style="line-height: 40px;">Filter</a>
            </div>
        </div>
    </fieldset>
   
}
<div id="divTable">
    @Html.Partial("OrdersTable", Model)
</div>
<div class="dataTables_paginate paging_bootstrap pagination">
    <ul>
        <li class="prev disabled"><a href="#">← Previous</a></li>
        <li class="active"><a href="#">1</a></li><li><a href="#">2</a></li>
        <li><a href="#">3</a></li><li class="next"><a href="#">Next → </a></li>
    </ul>
</div>
<div class="modal hide fade" id="updateStatusModal">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
            ×</button>
        <h3 id="myModalLabel">
            Update Orders Status</h3>
    </div>
    <div class="modal-body">
        <select id="ddlStatus">
            <option value="1">Delivering</option>
            <option value="2">Delivered</option>
            <option value="3">WaitingForReturn</option>            
        </select>
    </div>
    <div class="modal-footer">
        <input type="submit" class="btn btn-primary" value="Update" id="btnUpdateStatus" />
        <button class="btn" data-dismiss="modal" aria-hidden="true">
            Cancel</button>
    </div>
</div>
<script type="text/javascript">
    @foreach (var status in ViewBag.SelectedStatuses)
    {
        if (status == (int)OrderStatus.DeliveringToHub)
        {
            <text>$('.sttDeliveringToHub').addClass('active');</text>
        }
        if (status == (int)OrderStatus.Delivering)
        {
            <text>$('.sttDelivering').addClass('active');</text>
        }
        if (status == (int)OrderStatus.Delivered)
        {
            <text>$('.sttDelivered').addClass('active');</text>
        }
        if (status == (int)OrderStatus.WaitingForReturn)
        {
            <text>$('.sttWaitingForReturn').addClass('active');</text>
        }

    }
    
    @if (ViewBag.StartDate != null)
    {
        <text>$('#startDateFilter').val("@ViewBag.StartDate")</text>
    }
    @if (ViewBag.EndDate != null)
    {
        <text>$('#endDateFilter').val("@ViewBag.EndDate")</text>
    }

    var selectedStatusIds = [1, 2, 3];
    var allStatus = [0, 1, 2, 3];

    $('.checkButtonStatus .btn').click(function () {
        //get status of current button that pressed
        var status = $(this).data('status-id');
        //checking if that status is exist in the array or not
        var result = in_array(selectedStatusIds, status);
        if (result == true) {
            var removeItem = status;
            //remove the value of status that was pressed again(mean not checked)
            selectedStatusIds = jQuery.grep(selectedStatusIds, function (value) {
                return value != removeItem;
            });
            //alert(selectedStatusIds);
        }
        else if (result == false) {
            //add it to the array
            selectedStatusIds.push(status);
        }
    });

    $('#checkAll').click(function () {
        $('.checkButtonStatus .btn-group .btn.status').addClass("active");
        selectedStatusIds = allStatus;
    });

    $('#checkNone').click(function () {
        $('.checkButtonStatus .btn-group .btn.status').removeClass("active");
        selectedStatusIds = new Array();
    });

//    $('#statusFilter').submit(function () {
//        $.ajaxSettings.traditional = true;
//        $.ajax({
//            type: 'POST',
//            url: '/Orders/RequestListByStatus/',
//            data: {
//                selectedStatusIds: selectedStatusIds,
//                startDate: $('#startDateFilter').val(),
//                endDate: $('#endDateFilter').val()
//            },
//            success: function (result) {
//                $('#divTable').html(result);
//                //$('#main-table').dataTable();
//                setupCrud('Orders')
//            },
//            async: false
//        });
//        return false;
//    });

    $('#statusFilter').submit(function () {
        urlParams = '';
        $.each($('.checkButtonStatus .btn-group .btn.status'),function(index,btn){
            if($(btn).hasClass('active')){
                urlParams += '&status=' + $(btn).data('status');
            }        
        });
        if($('#startDateFilter').val() != ''){
            //getDateFromFormat($('#startDateFilter').val(),'dd/MM/y');
            var dateParts = $('#startDateFilter').val().split("/");
            urlParams += '&startDate=' + dateParts[0] + dateParts[1]+ dateParts[2];
        }
        if($('#endDateFilter').val() != ''){
            //getDateFromFormat($('#startDateFilter').val(),'dd/MM/y');
            var dateParts = $('#endDateFilter').val().split("/");
            urlParams += '&endDate=' + dateParts[0] + dateParts[1]+ dateParts[2];
        }
        $.blockUI();
        window.location = '/Hub/Orders?' + urlParams;
        return false;
    });

    function in_array(array, id) {
        for (var i = 0; i < array.length; i++) {
            if (array[i] == id) {
                return true;
            }
        }
        return false;
    }

    function toggleStatus() {
        if ($('#toggleElement').is(':checked')) {
            $('#dateFilterSelector input.datepicker').attr('disabled', true);
            $('#dateFilterSelector input.datepicker').val("");
        }
        else {
            $('#dateFilterSelector :input').removeAttr('disabled');
        }
    }

    $('.datepicker').datepicker({ format: "dd/mm/yyyy" });

    var showUpdateStatusModal = function (OrderId, currentStatus) {
        $('#ddlStatus option[value="' + currentStatus + '"]').attr('selected', 'selected');
        $('#updateStatusModal').modal();

        $('#btnUpdateStatus').click(function () {
            updateOrderStatus(OrderId);
        });
    };

    var updateOrderStatus = function (OrderId) {
        var status = $('#ddlStatus option:selected').val();
        $.post('/Hub/Orders/UpdateStatus/', { OrderId: OrderId, newStatus: status }, function (result) {
            if (result.success) {
                window.location = '/Orders';

            }
        });
    };

//    var cancelOrder = function (orderId) {
//        bootbox.confirm("Are you sure to cancel/delete this order?", function (result) {
//            if (result) {
//                $.post('/Customer/Orders/Cancel/' + orderId, function (result) {
//                    if (result.success) {
//                        $.blockUI();
//                        window.location.reload();
//                    } else {
//                        bootbox.alert('Unable to cancel/delete this order');
//                    }
//                });
//            }
//        });
//    };

    $(document).ready(function () {
        setupDataTable();
    });

    var setupDataTable = function () {
        $('#main-table').dataTable({
            "bRetrieve": true,
            "sDom": "<'row'<'span6'><'span6'f>r>t<'row'<'span6'l><'span6'p>>",
            "aaSorting": [],
            "bAutoWidth": true,
            "aoColumns": [
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                            { "iDataSort": 8 },
                            { "bVisible": false },
                            null,
                            null,
                            null
                        ],
            "aaSorting": [[8, "asc"]]
        });
    };

//    var markAsReturned = function(orderId){
//        bootbox.confirm('Mark this order as returned?',function(confirmed){
//            if(confirmed){
//                $.post('/Customer/Orders/MarkAsReturned/' + orderId, function(result){
//                    if(result.success){
//                        $.blockUI();
//                        window.location.reload();
//                    }
//                });
//            }
//        });
//    };
</script>
