@model HDMS.Models.DeliveryPlan
@using HDMS.Models.Utilities
@using HDMS.Models.Statuses
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "Delivery Plan Details";
    ViewBag.Heading = "Delivery Plan Details";
}
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDtQG_NozpgE0uacggef_wCw-pF10M8bOA&sensor=false">
</script>
<script src="/js/gmap3.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="/css/DT_bootstrap.css" />
<link href="/css/dataTables.bootstrap.css" rel="stylesheet" type="text/css" />
<script src="/js/jquery.dataTables.js" type="text/javascript"></script>
<script type="text/javascript" charset="utf-8" language="javascript" src="/js/DT_bootstrap.js"></script>
<script src="/js/dataTables.bootstrap.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="/js/form-action.js" type="text/javascript"></script>
<div class="plan-details">
    <div id="plan-details-box" class="green-bordered" style="margin-bottom: 5px;">
        <div style="clear: both;">
        </div>
        <div class="row-fluid" id="delivery-plan-details">
            <div class="col-left" style="width: 30%; min-width: 250px; float: left">
                <dl class="dl-horizontal">
                    <dt>Delivery Plan No.:</dt>
                    <dd id="PlanNumber">
                        #@Model.DeliveryPlanId</dd>
                    <dt>Created Date:</dt>
                    <dd id="CreatedDate">@String.Format("{0:dd/MM/yyyy hh:mm tt}", Model.CreatedDate)</dd>
                    <dt>Created By:</dt>
                    <dd id="CreatedBy">@Model.CreatedByUserInfo.FullName (@Model.CreatedByUser.UserName)</dd>
                </dl>
            </div>
            <div class="col-center" style="width: 25%; min-width: 200px; float: left">
                <dl class="dl-horizontal">
                    <dt>Number of Orders:</dt>
                    <dd>@Model.Orders.Count</dd>
                    <dt>Number of Items:</dt>
                    <dd>@Model.Orders.Sum(r => r.Items.Count)</dd>
                    <dt>Status:</dt>
                    <dd id="Status">
                        <span class="label label-warning">@Regex.Replace(Model.Status.ToString(), "(\\B[A-Z])", " $1")</span></dd>
                </dl>
            </div>
            <div class="col-right" style="width: 30%; min-width: 350px; float: left">
                <dl class="dl-horizontal">
                    <dt>Assigned To:</dt>
                    <dd id="AssignedTo">
                        @if (Model.AssignedDeliveryStaffId == null)
                        {
                            <a href="#assignModal" data-toggle="modal" class="myToolTip" rel="tooltip" title="Assign">
                                <img src="/img/icons/arrow_right2.png" />
                            </a>
                        }
                        else
                        {
                            @ViewBag.AssignTo 
                            if (Model.Status != HDMS.Models.Statuses.DeliveryPlanStatus.Finished)
                            {
                            <a href="#assignModal" data-toggle="modal" class="myToolTip" rel="tooltip" title="Assign to another staff">
                                <img src="/img/icons/arrow_right2.png" />
                            </a>
                            }
                        }
                    </dd>
                    <dt>Notes:</dt>
                    <dd id="Note">
                        None</dd>
                </dl>
            </div>
            <div style="width: 6%; min-width: 80px; float: right">
                @if (Model.Status == HDMS.Models.Statuses.DeliveryPlanStatus.Assigned)
                {
                    <button class="btn btn-success" id="markAsFinishedBtn" style="width: 100%;">
                        Mark as Finished</button>
                }
            </div>
        </div>
    </div>
    @if (!Model.Orders.Any(o => o.Status != OrderStatus.PlannedForDelivering))
    {
        <div class="row-fluid">
            <a class="btn btn-inverse pull-right" href="javascript:void(0)" onclick="cancelPlan(@Model.DeliveryPlanId)">
                Cancel Plan</a>
        </div>
    }
    <ul class="nav nav-tabs">
        <li class="active"><a href="#order-list" data-toggle="tab">Orders List</a></li>
        <li><a href="#map-div" data-toggle="tab">Map</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active row-fluid" id="order-list">
            <div id="order-table-div">
                @using (Html.BeginForm("MarkAsDelivered", "Orders", FormMethod.Post, new { id = "mark-delivered-form", Style = "margin:0;" }))
                {
                    <table class="table table-striped table-bordered" id="main-table">
                        <thead>
                            <tr>
                                @if (Model.Orders.Any(r => r.OrderStatus == (int)HDMS.Models.Statuses.OrderStatus.PlannedForDelivering))
                                {
                                    <th>
                                    </th>        
                                }
                                <th>
                                    Order No.
                                </th>
                                <th>
                                    Requested Date
                                </th>
                                <th>
                                    Customer
                                </th>
                                <th>
                                    Receiver Address
                                </th>
                                <th>
                                    Amount To Collect
                                </th>
                                <th>
                                    Delivery Option
                                </th>
                                <th>
                                    Payment Type
                                </th>
                                <th>
                                    Status
                                </th>
                                <th>
                                    Due Date
                                </th>
                                <th>
                                    Action
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in ViewBag.OrderList)
                            {
                                <tr>
                                    @if (Model.Orders.Any(r => r.OrderStatus == (int)HDMS.Models.Statuses.OrderStatus.PlannedForDelivering))
                                    {
                                        <td>
                                            @if (order.OrderStatus == (int)HDMS.Models.Statuses.OrderStatus.PlannedForDelivering)
                                            {                                    
                                                <input type="checkbox" name="deliveredOrder" value="@order.OrderId" />                 
                                            }
                                        </td>        
                                    }
                                    <td>
                                        #@order.OrderId
                                    </td>
                                    <td>
                                        @String.Format("{0:g}", order.Request.RequestedDate)
                                    </td>
                                    <td>
                                        @order.Request.Customer.DisplayName
                                    </td>
                                    <td>
                                        @order.FullAddress
                                    </td>
                                    <td>
                                        @order.AmountToBeCollectedFromReceiver
                                    </td>
                                    <td>
                                        @(order.DeliveryOption == null ? "None" : order.DeliveryOption.Name)
                                    </td>
                                    <td>
                                        @(order.OrderPaymentType == null ? "None" : order.OrderPaymentType.Name)
                                    </td>
                                    <td>
                                        @Regex.Replace(order.Status.ToString(), "(\\B[A-Z])", " $1")
                                        @*@Regex.Replace(item.Status.ToString(), "(\\B[A-Z])", " $1")*@
                                    </td>
                                    <td>
                                        @String.Format("{0:d}", order.DueDate)
                                    </td>
                                    <td class=" action-column">
                                        <a class="btn action view" href="/Orders/Details/@order.OrderId">
                                            <img src="/img/icons/notepad.png" alt="View" title="View">
                                        </a>
                                        @if (order.Status == HDMS.Models.Statuses.OrderStatus.PlannedForDelivering)
                                        {
                                            <a class="btn action delete" href="#" onclick="removeFromPlan(@order.OrderId);">
                                                <img src="/img/icons2/cross.png" alt="Remove/Cancel" title="Remove/Cancel" width="18px" />
                                            </a>
                                        }
                                    </td>
                                </tr>
                            }
                            @if (Model.Orders.Any(r => r.OrderStatus == (int)HDMS.Models.Statuses.OrderStatus.PlannedForDelivering))
                            {
                                <tr>
                                    <td>
                                        <a href="#" onclick="selectAll()">All</a> | <a href="#" onclick="selectNone()">None</a>
                                    </td>
                                    <td colspan="10">
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
            @if (Model.Orders.Any(r => r.OrderStatus == (int)HDMS.Models.Statuses.OrderStatus.PlannedForDelivering))
            {
                <button class="btn btn-primary" value="Mark as Delivered" id="markAsDeliveredBtn"
                    style="min-width: 150px; margin: 10px 10px 0 0;">
                    Mark as Delivered</button>        
            }
            <a class="btn btn-primary" href="/DeliveryPlans/PdfDetails/@Model.DeliveryPlanId" style="margin: 10px 10px 0 0;">
                Created PDF</a>
        </div>
        <div class="tab-pane" id="map-div">
            <div class="row-fluid" style="position: relative">
                <div id="map-wrapper" class="span9">
                    <div id="map" style="height: 580px; width: 100%">
                    </div>
                </div>
                <div id="simple-order-list" style="max-height: 580px; overflow: scroll" class="span3">
                    <table class="table table-striped table-bordered">
                        <thead>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < ViewBag.OrderList.Count; i++ )
                            {
                                var order = ViewBag.OrderList[i];
                                var no = i + 1;
                                <tr>
                                    <td>@no</td>
                                    <td>
                                        <div class="pull-left">
                                            <span style="font-size: 15px; color: #969696">#</span>&nbsp;
                                            @order.OrderId
                                        </div>
                                        <div class="pull-left">
                                            <span style="font-size: 15px; color: #969696">@@</span>&nbsp;
                                            @order.FullAddress
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <button class="btn btn-primary" id="get-route" style="margin: 10px 10px 0 0">
                Show Route</button>
            <button class="btn btn-primary" id="recalculate-route" style="margin: 10px 10px 0 0">
                Recalculate Route</button>
        </div>
    </div>
</div>
<div class="modal hide fade" id="assignModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
            ×</button>
        <h3 id="myModalLabel">
            Assign plan to delivery staff</h3>
    </div>
    <div class="modal-body">
        <p>
            Assign to</p>
        @Html.DropDownListFor(_ => Model.AssignedDeliveryStaffId, ViewBag.PossibleDeliveryStaffs as SelectList, new { id = "ddlAssignedStaff" })
    </div>
    <div class="modal-footer">
        <button class="btn btn-primary" id="btnAssign">
            Save</button>
        <button class="btn" data-dismiss="modal" aria-hidden="true">
            Close</button>
    </div>
</div>
<script>
    var DeliveryPlanId = @Model.DeliveryPlanId;
    var mapShown = false;

    $('a[data-toggle="tab"]').on('show', function (e) {
        if(e.target.text == 'Map' && !mapShown){
            initialize(); 
            mapShown = true;    
        }
    })

    $('#btnAssign').click(function () {
        var staffUserId = $('#ddlAssignedStaff option:selected').val();
        $.post('/DeliveryPlans/Assign/', { DeliveryPlanId: DeliveryPlanId, staffUserId : staffUserId}, function (result) {
            if(result.success){
//                $('#AssignedTo').html(result.staffName + '<br /><a href="#assignModal" data-toggle="modal">Assign to another staff</a>');
//                $('#assignModal').modal('hide');
                $.blockUI();
                window.location.reload();
            }
        });
    });

    var removeFromPlan = function(requestId){
        bootbox.confirm('Remove this order from plan?', function(confirmed){
            if(confirmed){
                $.post('/Orders/RemoveFromDeliveryPlan/'+requestId, function (result) {
                    if(result.success){
                        $.blockUI();
                        window.location.reload();
                    } else {
                        bootbox.alert('Failed to remove this request from the collection plan.');
                    }
                });
            }
        });        
    };

    var selectAll = function(){
        $('#mark-delivered-form input[type="checkbox"]').attr('checked','checked');
    };

    var selectNone = function(){
        $('#mark-delivered-form input[type="checkbox"]').removeAttr('checked');
    };

    $('#mark-delivered-form').submit(function(){
        $.post($(this).attr("action"), $(this).serialize(), function(result){
            if(result.success){
                $.blockUI();
                window.location.reload();
            } else {
                bootbox.alert('Failed to mark as delivered.');
            }
        });
        return false;
    });

    $('#markAsDeliveredBtn').click(function(){
        $('#mark-delivered-form').submit();
    });
    
    $('#markAsFinishedBtn').click(function(){
        allOrdersFinished = @if (Model.Status == HDMS.Models.Statuses.DeliveryPlanStatus.Assigned && !(Model.Orders.Any(r => r.OrderStatus == (int)HDMS.Models.Statuses.OrderStatus.PlannedForDelivering)))
                            {<text>true</text>}
                            else
                            {<text>false</text>};
        if(allOrdersFinished){
            markPlanAsFinished(false);
        } else {
            bootbox.confirm('Remove uncollected requests from plan and mark plan as fisnished?', function(result){
                if(result){
                    markPlanAsFinished(true);
                }                
            });
        }

        
    });

    var markPlanAsFinished = function(removeUnfinishedOrders){
        $.post('/DeliveryPlans/MarkAsFinished/@Model.DeliveryPlanId', {removeUnfinishedOrders : removeUnfinishedOrders}, function(result){
            if(result.success){
                $.blockUI();
                window.location.reload();
            }
        });
    };

    var cancelPlan = function(planId){
        bootbox.confirm('Remove all orders and cancel this plan?', function(result){
                if(result){
                    $.post('/DeliveryPlans/Cancel/'+planId, function(result){
                        if(result.success){
                            $.blockUI();
                            window.location = '/DeliveryPlans';
                        }
                    });
                }                
            });
        
    };
</script>
<script>
    var gmap3;

    var orderPoints = new Array();

    @foreach (var order in ViewBag.OrderList)
    {
        <text>
            orderPoints.push({
                orderId: @order.OrderId,
                lat: @order.Latitude,
                long: @order.Longitude
            });
        </text>
    }
    
    var initialize = function(){
        var markerValues = new Array();
        markerValues.push({
            latLng: new google.maps.LatLng(@ViewBag.Hub.Latitude,@ViewBag.Hub.Longitude),
            options:{icon: "/img/markers/home.png"}
        });
        $.each(orderPoints,function(index,orderPoint){
            markerValues.push({
                latLng: new google.maps.LatLng(orderPoint.lat,orderPoint.long),
                id: orderPoint.orderId,
                data: "# " + orderPoint.orderId,
                options:{icon: "/img/markers/numbers/red" + (index<9?"0":"") + (index+1) + ".png"}
            });
        });
        $("#map").gmap3({
            map: {
                options: {
                    center: [10.784574, 106.664788],
                    zoom: 13,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    mapTypeControl: false,
                    navigationControl: false,
                    scrollwheel: false,
                    streetViewControl: false,
                    zoomControl: true,
                    zoomControlOptions:{
                        style: google.maps.ZoomControlStyle.SMALL
                    }
                }
            },
            marker: {
                values: markerValues,
                options: {
                    draggable: false
                },
                events:{
                  mouseover: function(marker, event, context){
                    var map = $(this).gmap3("get"),
                      infowindow = $(this).gmap3({get:{name:"infowindow"}});
                    if (infowindow){
                      infowindow.open(map, marker);
                      infowindow.setContent(context.data);
                    } else {
                      $(this).gmap3({
                        infowindow:{
                          anchor:marker, 
                          options:{content: context.data}
                        }
                      });
                    }
                  },
                  mouseout: function(){
                    var infowindow = $(this).gmap3({get:{name:"infowindow"}});
                    if (infowindow){
                      infowindow.close();
                    }
                  }
                }
            },
            autofit:{}
        });
        gmap3 = $("#map").gmap3("get");
        google.maps.event.trigger(gmap3, 'resize');
        gmap3.setCenter(new google.maps.LatLng(10.784574, 106.664788));
    }

    var getDirection = function(origin,destination,autofit){
        $("#map").gmap3({
            getroute:{
                options:{
                    origin: origin,
                    destination: destination,
                    travelMode: google.maps.DirectionsTravelMode.DRIVING          
                },
                callback: function(results){
                    if (!results) return;
                    $(this).gmap3({
                    directionsrenderer:{
                        options:{
                        directions:results,
                        suppressMarkers: true
                        } 
                    }
                    });
                    if(autofit){
                        setTimeout(function(){
                            $("#map").gmap3({
                                autofit:{}   
                            }); 
                        },1000);
                    }
                }
            }                  
        });
    };

    var showRoute = function(){
        $('#map').block({ message: 'processing...' });
        numberOfPoints = orderPoints.length;
        origin = new google.maps.LatLng(@ViewBag.Hub.Latitude,@ViewBag.Hub.Longitude);
        destination = new google.maps.LatLng(orderPoints[0].lat, orderPoints[0].long);
        getDirection(origin,destination);

        $.each(orderPoints,function(index,orderPoint){
            if(index < numberOfPoints-1){
                setTimeout(function(){
                    origin = new google.maps.LatLng(orderPoints[index].lat, orderPoints[index].long);
                    destination = new google.maps.LatLng(orderPoints[index+1].lat, orderPoints[index+1].long);
                    getDirection(origin,destination);
                },(index+1)*500);
            }
        }); 

        setTimeout(function(){
            origin = new google.maps.LatLng(orderPoints[numberOfPoints-1].lat, orderPoints[numberOfPoints-1].long);
            destination = new google.maps.LatLng(@ViewBag.Hub.Latitude,@ViewBag.Hub.Longitude);
            getDirection(origin,destination,true);
        },numberOfPoints*500);

        setTimeout(function(){
            $('#map').unblock();
            $('body').append('<div id="get-route-done" style="width:0px;height:0px;"></div>');
        },(numberOfPoints+1)*500);
    }

    $('#get-route').click(function(){
        showRoute();
    });

    $('#recalculate-route').click(function(){
        $.post('/DeliveryPlans/RecalculateRoute/@Model.DeliveryPlanId',function(result){
            if(result.success){
                $.blockUI();
                window.location.reload();
            }else{
                bootbox.alert('Failed to recalculate distances.');
            }
        });
    });

        

    $('#printMap').click(function(){
        $('#header').hide();
        $('.heading').hide();
        $('#plan-details-box').hide();
        $('.nav').hide();
        $('button').hide();
        $('a').hide();
        $('#simple-order-list').hide();
        $('#map-wrapper').prepend('<h3 id="print-title" align="center">Phiên giao hàng số #@Model.DeliveryPlanId</h3>');
        window.print();
        $('#header').show();
        $('.heading').show();
        $('#plan-details-box').show();
        $('.nav').show();
        $('button').show();
        $('a').show();
        $('#simple-order-list').show();
        $('#print-title').remove();
        return false; 
    });
</script>
