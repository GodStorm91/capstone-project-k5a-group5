@model HDMS.Models.CollectionPlan
@using HDMS.Models.Utilities
@using HDMS.Models.Statuses
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "Collection Plan Details";
    ViewBag.Heading = "Collection Plan Details";
}
<link rel="stylesheet" type="text/css" href="/css/DT_bootstrap.css" />
<link href="/css/dataTables.bootstrap.css" rel="stylesheet" type="text/css" />
<script src="/js/jquery.dataTables.js" type="text/javascript"></script>
<script type="text/javascript" charset="utf-8" language="javascript" src="/js/DT_bootstrap.js"></script>
<script src="/js/dataTables.bootstrap.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="/js/form-action.js" type="text/javascript"></script>
<div class="plan-details">
    <div id="plan-details-box" class="green-bordered" style="margin-bottom: 5px;">
        <div style="clear: both;">
        </div>
        <div class="row-fluid" id="collection-plan-details">
            <div class="col-left" style="width: 30%; min-width: 250px; float: left">
                <dl class="dl-horizontal">
                    <dt>Collection Plan No.:</dt>
                    <dd id="PlanNumber">
                        #@Model.CollectionPlanId</dd>
                    <dt>Created Date:</dt>
                    <dd id="CreatedDate">@String.Format("{0:dd/MM/yyyy hh:mm tt}", Model.CreatedDate)</dd>
                    <dt>Created By:</dt>
                    <dd id="CreatedBy">@Model.CreatedByUserInfo.FullName (@Model.CreatedByUser.UserName)</dd>
                </dl>
            </div>
            <div class="col-center" style="width: 25%; min-width: 200px; float: left">
                <dl class="dl-horizontal">
                    <dt>Number of Requests:</dt>
                    <dd>@Model.Requests.Count</dd>
                    <dt>Number of Orders:</dt>
                    <dd>@Model.Requests.Sum(r => r.ValidOrders.Count)</dd>
                    <dt>Status:</dt>
                    <dd id="Status"><span class="label label-warning">@Regex.Replace(Model.Status.ToString(), "(\\B[A-Z])", " $1")</span>&nbsp;</dd>
                </dl>
            </div>
            <div class="col-right" style="width: 30%; min-width: 300px; float: left">
                <dl class="dl-horizontal">
                    <dt>Assigned To:</dt>
                    <dd id="AssignedTo">
                        @if (Model.AssignedDeliveryStaffId == null)
                        {
                            <a href="#assignModal" data-toggle="modal" class="myToolTip" rel="tooltip" title="Assign">
                                <img src="/img/icons/arrow_right2.png" />
                            </a>
                        }
                        else
                        {
                            @ViewBag.AssignTo 
                            if (Model.Status != HDMS.Models.Statuses.CollectionPlanStatus.Finished)
                            {
                                <a href="#assignModal" data-toggle="modal" class="myToolTip" rel="tooltip" title="Assign to another staff">
                                    <img src="/img/icons/arrow_right2.png" />
                                </a>
                            }
                        }
                    </dd>
                    <dt>Notes:</dt>
                    <dd id="Note">
                        None</dd>
                </dl>
            </div>
            <div style="width: 6%; min-width: 80px; float: right">
                @if (Model.Status == HDMS.Models.Statuses.CollectionPlanStatus.Assigned)
                {
                    <button class="btn btn-success" id="markAsFinishedBtn" style="width: 100%;">
                        Mark as Finished</button>
                }
            </div>
        </div>
    </div>
    @if (!Model.Requests.Any(r => r.Status != RequestStatus.PlannedForCollecting))
    {
        <div class="row-fluid">
            <a class="btn btn-inverse pull-right" href="javascript:void(0)" onclick="cancelPlan(@Model.CollectionPlanId)">Cancel Plan</a>
        </div>
    }
    <div class="request-list row-fluid">
        <h3>
            Requests</h3>
        <div id="request-table-div">
            @using (Html.BeginForm("MarkAsCollected", "Request", FormMethod.Post, new { id = "mark-collected-form", Style = "margin:0;" }))
            {
                <table class="table table-striped table-bordered" id="main-table">
                    <thead>
                        <tr>
                            @if (Model.Requests.Any(r => r.RequestStatus == (int)HDMS.Models.Statuses.RequestStatus.PlannedForCollecting))
                            {
                                <th>
                                </th>        
                            }
                            <th>
                                Request No.
                            </th>
                            <th>
                                Customer
                            </th>
                            <th>
                                Collection Address
                            </th>
                            <th>
                                Requested Date
                            </th>
                            <th>
                                Number of Orders
                            </th>
                            <th>
                                Status
                            </th>
                            <th>
                                Notes
                            </th>
                            <th>
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Requests)
                        {
                            <tr>
                                @if (Model.Requests.Any(r => r.RequestStatus == (int)HDMS.Models.Statuses.RequestStatus.PlannedForCollecting))
                                {
                                    <td>
                                        @if (item.RequestStatus == (int)HDMS.Models.Statuses.RequestStatus.PlannedForCollecting)
                                        {                                    
                                            <input type="checkbox" name="collectedRequest" value="@item.RequestId" />                     
                                        }
                                    </td>        
                                }
                                <td>
                                    #@item.RequestId
                                </td>
                                <td>
                                    @Html.DisplayTextFor(_ => item.Customer.DisplayName).ToString()
                                </td>
                                <td>@item.CollectionAddress
                                </td>
                                <td>
                                    @String.Format("{0:dd/MM/yyyy hh:mm tt}", item.RequestedDate)
                                </td>
                                <td>
                                    @item.ValidOrders.Count
                                </td>
                                <td>
                                    @Regex.Replace(item.Status.ToString(), "(\\B[A-Z])", " $1")
                                </td>
                                <td>
                                    @item.Note
                                </td>
                                <td class=" action-column">
                                    <a class="btn action view" href="/Request/Details/@item.RequestId">
                                        <img src="/img/icons/notepad.png" alt="View" title="View">
                                    </a>
                                    @if (item.Status == HDMS.Models.Statuses.RequestStatus.PlannedForCollecting)
                                    {
                                        <a class="btn action delete" href="#" onclick="removeFromPlan(@item.RequestId);">
                                            <img src="/img/icons2/cross.png" alt="Remove From Plan" title="Remove From Plan"
                                                width="18px" />
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                        @if (Model.Requests.Any(r => r.RequestStatus == (int)HDMS.Models.Statuses.RequestStatus.PlannedForCollecting))
                        {
                            <tr>
                                <td>
                                    <a href="#" onclick="selectAll()">All</a> | <a href="#" onclick="selectNone()">None</a>
                                </td>
                                <td colspan="8">
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
        @if (Model.Requests.Any(r => r.RequestStatus == (int)HDMS.Models.Statuses.RequestStatus.PlannedForCollecting))
        {
            <button class="btn btn-primary" value="Mark as Collected" id="markAsCollectedBtn"
                style="min-width: 150px; margin: 0; min-height: 40px">
                Mark as Collected</button>        
        }
    </div>
</div>
<div class="modal hide fade" id="assignModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
            ×</button>
        <h3 id="myModalLabel">
            Assign plan to delivery staff</h3>
    </div>
    <div class="modal-body">
        <p>
            Assign to</p>
        @Html.DropDownListFor(_ => Model.AssignedDeliveryStaffId, ViewBag.PossibleDeliveryStaffs as SelectList, new { id = "ddlAssignedStaff" })
    </div>
    <div class="modal-footer">
        <button class="btn btn-primary" id="btnAssign">
            Save</button>
        <button class="btn" data-dismiss="modal" aria-hidden="true">
            Close</button>
    </div>
</div>
<script>
    var collectionPlanId = @Model.CollectionPlanId;

    $('#btnAssign').click(function () {
        var staffUserId = $('#ddlAssignedStaff option:selected').val();
        $.post('/CollectionPlans/Assign/', { collectionPlanId: collectionPlanId, staffUserId : staffUserId}, function (result) {
            if(result.success){
                $.blockUI();
                window.location.reload();
            }else{
                bootbox.alert('Unable to assign. Please refresh and try again.');
            }
        });
    });

    var removeFromPlan = function(requestId){
        bootbox.confirm('Remove this request from plan?', function(confirmed){
            if(confirmed){
                $.post('/Request/RemoveFromCollectionPlan/'+requestId, function (result) {
                    if(result.success){
                        $.blockUI();
                        window.location.reload();
                    } else {
                        bootbox.alert('Failed to remove this request from the collection plan.');
                    }
                });
            }
        });        
    };

    var selectAll = function(){
        $('#mark-collected-form input[type="checkbox"]').attr('checked','checked');
    };

    var selectNone = function(){
        $('#mark-collected-form input[type="checkbox"]').removeAttr('checked');
    };

    $('#mark-collected-form').submit(function(){
        $.post($(this).attr("action"), $(this).serialize(), function(result){
            if(result.success){
                $.blockUI();
                window.location.reload();
            } else {
                bootbox.alert('Failed to mark as collected.');
            }
        });
        return false;
    });

    $('#markAsCollectedBtn').click(function(){
        $('#mark-collected-form').submit();
    });
    
    $('#markAsFinishedBtn').click(function(){
        allRequestsFinished = @if (Model.Status == HDMS.Models.Statuses.CollectionPlanStatus.Assigned && !(Model.Requests.Any(r => r.RequestStatus == (int)HDMS.Models.Statuses.RequestStatus.PlannedForCollecting)))
                              {<text>true</text>}
                              else
                              {<text>false</text>};
        if(allRequestsFinished){
            markPlanAsFinished(false);
        } else {
            bootbox.confirm('Remove uncollected requests from plan and mark plan as finished?', function(result){
                if(result){
                    markPlanAsFinished(true);
                }                
            });
        }

        
    });

    var markPlanAsFinished = function(removeUncollectedRequests){
        $.post('/CollectionPlans/MarkAsFinished/@Model.CollectionPlanId', {removeUncollectedRequests : removeUncollectedRequests}, function(result){
            if(result.success){
                $.blockUI();
                window.location.reload();
            }
        });
    };

    
    var cancelPlan = function(planId){
        bootbox.confirm('Remove all requests and cancel this plan?', function(confirmed){
                if(confirmed){
                    $.post('/CollectionPlans/Cancel/'+planId, function(result){
                        if(result.success){
                            $.blockUI();
                            window.location = '/CollectionPlans';
                        }
                    });
                }                
            });
        
    };
</script>
