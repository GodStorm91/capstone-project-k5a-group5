@model IEnumerable<SMDH.Models.Plan>
@using SMDH.Models.Utilities
@using SMDH.Models.Statuses
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "Create new Plan";
    ViewBag.Heading = "Plan";
}
<div class="row-fluid">
    <div class="span10">
        <div class="checkButtonStatus">
            <div class="row-fluid">
                <button type="button" class="btn btn-inverse pull-left" id="checkAll">
                    All</button>
                <div class="btn-group pull-left" data-toggle="buttons-checkbox">
                    <button type="button" class="sttNew btn status" data-status="new">
                        New</button>
                    <button type="button" class="sttAssigned btn status" data-status="assigned">
                        Assigned</button>
                    <button type="button" class="sttFinished btn status" data-status="finished">
                        Finished</button>
                </div>
                <button type="button" class="btn btn-inverse pull-left" id="checkNone">
                    None</button>
            </div>
        </div>
        <div id="dateFilterSelector">
            <div class="row-fluid bordered">
                <div class="pull-left" style="line-height: 40px; margin-right: 10px; font-weight: bold;">
                    Created Date:
                </div>
                <div class="pull-left" data-date-format="dd/mm/yyyy">
                    From
                    <input class="datepicker input-small" size="16" type="text" value="" id="startDateFilter"
                        name="startDate"><br />
                </div>
                <div class="pull-left" data-date-format="dd/mm/yyyy" style="margin-left: 30px;">
                    To
                    <input class="datepicker input-small" size="16" type="text" value="" id="endDateFilter"
                        name="endDate">
                </div>
                <div class="span3" style="line-height: 28px; position: relative;">
                    <div style="position: absolute; bottom: 0; left: 0;">
                        <input id="toggleElement" type="checkbox" name="toggle" onchange="toggleStatus()" />
                        Disable Date Filter
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="span2">
        <a class="btn btn-primary" onclick="$(this).closest('form').submit()" id="btnFilter">
            Filter</a>
    </div>
</div>
<div id="divTable">
    @Html.Partial("PlansTable", Model)
</div>
<div class="modal hide fade" id="assignModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
            ×</button>
        <h3 id="myModalLabel">
            Assign plan to delivery staff</h3>
    </div>
    <div class="modal-body">
        <p>
            Assign to</p>
        @if (ViewBag.PossibleDeliveryStaffs != null)
        {
            foreach (var d in ViewBag.PossibleDeliveryStaffs)
            {
            <input type="checkbox" name="deliveryman" value="@d.DeliveryMenId" />@d.FirstName
            }
        }
    </div>
    <div class="modal-footer">
        <button class="btn btn-primary" id="btnAssign">
            Save</button>
        <button class="btn" data-dismiss="modal" aria-hidden="true">
            Close</button>
    </div>
</div>
<script type="text/javascript">
    @foreach (var status in ViewBag.SelectedStatuses)
    {
        if (status == (int)DeliveryPlanStatus.New)
        {
            <text>$('.sttNew').addClass('active');</text>
        }
        if (status == (int)DeliveryPlanStatus.Assigned)
        {
            <text>$('.sttAssigned').addClass('active');</text>
        }
        if (status == (int)DeliveryPlanStatus.Finished)
        {
            <text>$('.sttFinished').addClass('active');</text>
        }
    }

    @if (ViewBag.StartDate != null)
    {
        <text>$('#startDateFilter').val("@ViewBag.StartDate")</text>
    }
    @if (ViewBag.EndDate != null)
    {
        <text>$('#endDateFilter').val("@ViewBag.EndDate")</text>
    }

    var selectedStatusIds = [1, 2];
    var allStatus = [1, 2, 4];

    $('.checkButtonStatus .btn').click(function () {
        //get status of current button that pressed
        var status = $(this).data('status-id');
        //checking if that status is exist in the array or not
        var result = in_array(selectedStatusIds, status);
        if (result == true) {
            var removeItem = status;
            //remove the value of status that was pressed again(mean not checked)
            selectedStatusIds = jQuery.grep(selectedStatusIds, function (value) {
                return value != removeItem;
            });
            //alert(selectedStatusIds);
        }
        else if (result == false) {
            //add it to the array
            selectedStatusIds.push(status);
        }
    });

    var PlanId = 0;
    function assign(){
        PlanId = arguments[0];
    }
    
    $('#btnAssign').click(function () {
        var checkBoxs = $("input[name=deliveryman]");
        var listdeliveryman = new Array();
        var listNotChooseDeliveryMan = new Array();
        var i = 0;
        var j = 0;
        $.each(checkBoxs, function() {
            if ($(this).is(":checked")){
                listdeliveryman[i] = $(this).val();
                i++;
            } else
            {
                listNotChooseDeliveryMan[j] = $(this).val();
                j++
            }
        });
        $.ajaxSettings.traditional = true;
        $.post('/Plans/Assign/', { PlanId: PlanId, listdeliveryman : listdeliveryman, listNotAssignedDeliveryMen: listNotChooseDeliveryMan}, function (result) {
            if(result.success){
                $.blockUI();
                window.location.reload();
            }else{
                bootbox.alert('Unable to assign. Please refresh and try again.');
            }
        });
    });

    $('#checkAll').click(function () {
        $('.checkButtonStatus .btn-group .btn.status').addClass("active");
        selectedStatusIds = allStatus;
    });

    $('#checkNone').click(function () {
        $('.checkButtonStatus .btn-group .btn.status').removeClass("active");
        selectedStatusIds = new Array();
    });

//    $('#statusFilter').submit(function () {
//        $.ajaxSettings.traditional = true;
//        $.ajax({
//            type: 'POST',
//            url: '/DeliveryPlans/GetStatusByCheckBox/',
//            data: {
//                selectedStatusIds: selectedStatusIds,
//                startDate: $('#startDateFilter').val(),
//                endDate: $('#endDateFilter').val()
//            },
//            success: function (result) {
//                $('#divTable').html(result);
//                $('#main-table').dataTable({
//                    "bRetrieve": true,
//                    "sDom": "<'row'<'span6 tblBtnGroup'><'span6'f>r>t<'row'<'span6'l><'span6'p>>"
//                });
//                $("div.tblBtnGroup").html('<a href="/DeliveryPlans/Create" role="button" class="btn DTTT_button_text btn-success" id="btnNewPlan"><span>Add</span></a>');
//            },
//            async: false
//        });
//        return false;
//    });

    $('#statusFilter').submit(function () {
        urlParams = '';
        $.each($('.checkButtonStatus .btn-group .btn.status'),function(index,btn){
            if($(btn).hasClass('active')){
                urlParams += '&status=' + $(btn).data('status');
            }        
        });
        if($('#startDateFilter').val() != ''){
            //getDateFromFormat($('#startDateFilter').val(),'dd/MM/y');
            var dateParts = $('#startDateFilter').val().split("/");
            urlParams += '&startDate=' + dateParts[0] + dateParts[1]+ dateParts[2];
        }
        if($('#endDateFilter').val() != ''){
            //getDateFromFormat($('#startDateFilter').val(),'dd/MM/y');
            var dateParts = $('#endDateFilter').val().split("/");
            urlParams += '&endDate=' + dateParts[0] + dateParts[1]+ dateParts[2];
        }
        $.blockUI();
        window.location = '/Plans/ViewDetailsCollectionPlans?' + urlParams;
        return false;
    });

    function in_array(array, id) {
        for (var i = 0; i < array.length; i++) {
            if (array[i] == id) {
                return true;
            }
        }
        return false;
    }

    function toggleStatus() {
        if ($('#toggleElement').is(':checked')) {
            $('#dateFilterSelector input.datepicker').attr('disabled', true);
            $('#dateFilterSelector input.datepicker').val("");
        }
        else {
            $('#dateFilterSelector :input').removeAttr('disabled');
        }
    }

    $('.datepicker').datepicker({ format: 'dd/mm/yyyy' });

    var showUpdateStatusModal = function (deliveryPlanId, currentStatus) {
        $('#ddlStatus option[value="' + currentStatus + '"]').attr('selected', 'selected');
        $('#updateStatusModal').modal();

        $('#btnUpdateStatus').click(function () {
            updateDeliveryPlanStatus(deliveryPlanId);
        });
    };

    var updateDeliveryPlanStatus = function (deliveryPlanId) {
        var status = $('#ddlStatus option:selected').val();
        $.post('/DeliveryPlans/UpdateStatus/', { deliveryPlanId: deliveryPlanId, newStatus: status }, function (result) {
            if (result.success) {
                window.location = '/DeliveryPlans';

            }
        });
    }; 
</script>
