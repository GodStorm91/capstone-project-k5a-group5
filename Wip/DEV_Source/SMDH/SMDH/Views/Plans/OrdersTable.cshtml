@model IEnumerable<SMDH.Models.Order>
@using System.Text.RegularExpressions;
@using SMDH.Models.Statuses;
@{
    Layout = null;
}
<table class="table table-striped table-bordered" id="main-table">
    <thead>
        <tr>
            <th>
                Order No.
            </th>
            <th>
                Requested Date
            </th>
            <th>
                Customer
            </th>
            <th>
                Receiver Address
            </th>
            <th>
                Amount To Collect
            </th>                    
            <th>
                Status
            </th>          
            <th>
                Fee
            </th>
            <th class="tbl-action-col">
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    #@item.OrderId
                </td>
                <td>
                    @(item.Request != null ? String.Format("{0:dd/MM/yyyy hh:mm tt}", item.Request.RequestedDate) : "None") 
                </td>
                <td>
                    <span class="label label-success">@(item.Request != null ? item.Request.Customer.DisplayName : "None")</span>
                </td>
                <td>
                    @item.FullAddress
                </td>
                <td>
                    @String.Format("{0:N0}",item.AmountToBeCollectedFromReceiver) VNĐ
                </td>                               
                <td>
                    @if (item.OrderStatus == (int)OrderStatus.Returned)
                    {
                        <span class="label label-danger">@((OrderStatus)(item.OrderStatus))</span>
                    }
                    else if (item.OrderStatus == (int)OrderStatus.Delivered || item.OrderStatus == (int)OrderStatus.Delivering)
                    {
                        <span class="label label-success">@((OrderStatus)(item.OrderStatus))</span>
                    }
                    else
                    {
                        <span class="label label-info">@((OrderStatus)(item.OrderStatus))</span>
                    }
                    
                   @* @if (item.OrderStatus == (int)OrderStatus.ToBeReturned)
                    {
                        <a class="btn btn-success btn-mini" href="#" onclick="markAsReturned(@item.OrderId)">
                            Mark As Returned </a>
                    }*@
                </td>                              
                <td>
                    @if (item.Fee != null)
                    {
                        @(String.Format("{0:N0}", item.Fee) + " VNĐ")
                    }
                    else
                    {
                        <span class="label label-important">Not set yet</span><text>&nbsp;</text>
                    }
                </td>
                <td class=" action-column">
                    
                    @if (!(item.OrderStatus == (int)OrderStatus.Delivering || item.OrderStatus == (int)OrderStatus.Delivered) &&
                        item.OrderStatus == (int)OrderStatus.PlannedForDelivering)
                    {
                        <a href="#" class="btn btn-mini btn-danger" onclick="cancelOrder(@item.OrderId)"><i class="icon-remove"></i>Returned
                    </a>
                        <a href="#" class="btn btn-mini btn-success" onclick="markOrderAsFinished(@item.OrderId)"><i class="icon-search"></i>Finished
                    </a>
                    }
                    
                    @if (item.OrderStatus == (int)OrderStatus.Returned)
                    {
                        <a href="#" class="btn btn-mini btn-info" onclick="editPrice(@item.OrderId)"><i class="icon-wrench"></i>Edit Price
                        </a>
                        <a href="#" class="btn btn-mini btn-success" onclick="approvePrice(@item.OrderId)"><i class="icon-ok-sign"></i>Approve Price
                        </a>
                    }
                    
                </td>
            </tr>
        }
    </tbody>
</table>
<script type="text/javascript">
    var cancelOrder = function (orderId) {
        $.post("/Orders/MarkOrderAsReturned", { id: orderId }, function (data) {
            if (data.success) {
                window.location.reload();
            } else {
                bootbox.alert("Can't cancel order!");
            }
        });
    }

    var approvePrice = function (orderId) {
        $.post("/Orders/MarkOrderAsReturnedReducePrice", { id: orderId }, function (data) {
            if (data.success) {
                window.location.reload();
            } else {
                bootbox.alert("Can't cancel order!");
            }
        });
    }

    var markOrderAsFinished = function (orderId) {
        $.post("/Orders/MarkOrderAsFinished/", { id: orderId }, function (data) {
            if (data.success) {
                window.location.reload();
            } else {
                bootbox.alert("Can't mark order as finished!");
            }
        });
    }

    var editPrice = function (modelId) {
        $('#createModal').html('');
        $.post('/' + "PriceCategories" + '/AddPriceCategory/', { orderId: modelId }, function (data) {
            $('#editModal').html(data);
            $("form").removeData("validator");
            $("form").removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse("form");
            $('.editor-field').keypress(function (e) {
                if (e.which == 13) {
                    $(this).parents('form').submit();
                    e.preventDefault();
                    return false;
                }
            });
            $('#editModal').modal();
        });
    };

    
</script>